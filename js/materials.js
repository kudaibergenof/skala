// –û–∂–∏–¥–∞–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç —É—Å–ª—É–≥ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É

const materialButtons = document.querySelectorAll('.material-button');
const materialContents = document.querySelectorAll('.material-content');
const cartItems = [];

materialButtons.forEach((button) => {
  button.addEventListener('click', () => {
    const targetId = button.getAttribute('data-target');
    const targetContent = document.getElementById(targetId);

    if (targetContent) {
      // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–Ω—Ç—ã —É—Å–ª—É–≥
      materialContents.forEach((content) => content.classList.add('d-none'));

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —É—Å–ª—É–≥–∏
      targetContent.classList.remove('d-none');

      // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å 'active' —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
      materialButtons.forEach((btn) => btn.classList.remove('active'));

      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'active' —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
      button.classList.add('active');
    }
  });
});

function addToCart(text, imageUrl) {
  const cartDiv = document.getElementById("cart");

  const textExists = Array.from(cartDiv.children).some(
    (element) => element.textContent.trim() === text
  );

  if (!textExists) {
    const newDiv = document.createElement("div");
    const newImage = document.createElement("img");
    const newText = document.createTextNode(text);
    const deleteButton = document.createElement("button");

    newImage.src = imageUrl;
    newImage.style.marginRight = "10px";
    newDiv.style.marginBottom = "10px";
    deleteButton.style.marginLeft = "5px";

    deleteButton.classList.add("delete-btn");
    deleteButton.onclick = function() {
      cartDiv.removeChild(newDiv);
      removeFromCart(text); // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    };

    deleteButton.style.verticalAlign = "middle";
    deleteButton.style.display = "inline-block"; 

    newDiv.appendChild(newImage);
    newDiv.appendChild(newText);
    newDiv.appendChild(deleteButton);
    cartDiv.appendChild(newDiv);

    addToCartItems(text); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞—Å—Å–∏–≤ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
  }
}

function addToCartItems(item) {
  cartItems.push(item);
  console.log("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É:", cartItems);
}

function removeFromCart(item) {
  const index = cartItems.indexOf(item);
  if (index !== -1) {
    cartItems.splice(index, 1);
    console.log("–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã:", cartItems);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
function sendTelegramMessage(chatId, message) {
  const botToken = '6349605603:AAE8AgNxMoR2a4CVdq1JCpDYpXwG76Oskpk'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
  const telegramUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;
  const data = {
    chat_id: chatId,
    text: message,
  };

  axios.post(telegramUrl, data)
    .then(response => {
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', response.data);
    })
    .catch(error => {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
function handleFormSubmit(event) {
  event.preventDefault();
  const chatId = '1978717195'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id –ø–æ–ª—É—á–∞—Ç–µ–ª—è

  const service = document.getElementById('materialSelect').value;
  const fullName = document.getElementById('fullName').value;
  const phone = document.getElementById('phone').value;

  if (fullName.trim() === '' || phone.trim() === '') {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã');
    return;
  }

  if (!validatePhoneNumber(phone)) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
    return;
  }


  const message = `
  üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:
  
  üõí –£—Å–ª—É–≥–∞: ${service}
  üë§ –§–ò–û: ${fullName}
  üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phone}
  üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:
  ${cartItems.map((item, index) => `${index + 1}. ${item}`).join("\n")}
  `;
  

  sendTelegramMessage(chatId, message);
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  closeModal();
  alert('–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏');
  
}

function closeModal() {
  consultationForm.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  consultationForm.classList.remove('show'); // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å 'show', –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Bootstrap
  consultationForm.setAttribute('aria-hidden', 'true'); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç aria-hidden="true"
  consultationForm.setAttribute('aria-modal', 'false'); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç aria-modal="false"
  document.body.classList.remove('modal-open'); // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å 'modal-open', –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Bootstrap
  var modalBackdrop = document.getElementsByClassName('modal-backdrop')[0];
  if (modalBackdrop) {
    modalBackdrop.parentNode.removeChild(modalBackdrop); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç .modal-backdrop
  }
}

const consultationForm = document.getElementById('shopModal');
consultationForm.addEventListener('submit', handleFormSubmit);
const cartItemsList = document.getElementById("cartItemsList");

function editModal(serviceName) {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è "–£—Å–ª—É–≥–∞" –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —É—Å–ª—É–≥–∏
  var serviceSelect = document.getElementById('materialSelect');
  serviceSelect.value = serviceName;
  cartItemsList.value = cartItems.join(", ");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function validatePhoneNumber(phoneNumber) {
  const phoneRegex = /^\+?[0-9]{10,14}$/; // –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 10 –¥–æ 14 —Ü–∏—Ñ—Ä
  return phoneRegex.test(phoneNumber);
}

